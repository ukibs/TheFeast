<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bunny</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
status = 0;
stage = 0;
distance_to_floor = 0;
grav = 0;
jumping = false;
ascending = false;
returning = false;
time_to_jump = 30;

//Variables de salto
jumpspeed = 50;
hJumpspeed = 15;
destination_x = 0;
destination_y = 0;
distance_to_objective = 0;
distance_done = 0;
steps_to_do = 0;
steps_done = 0; 

//
meteor_to_throw = 10;
meteor_thrown = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
returning = true;
ascending = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Haremos que salte cuando acabe la alarma
    //Slato en estado 1
if(status == 1){
    objective_platform = instance_nearest(obj_bunny_player.x, 
                            obj_bunny_player.y, obj_falling_platform);
    destination_x = objective_platform.x;
    destination_y = objective_platform.y + 50;
    distance_to_objective = distance_to_point(destination_x, destination_y);
    
    jumping = true;
    ascending = true;
    sprite_index = spr_bunny_jumping;
    
    //Que se gire si cambia de direcci칩n
    image_xscale = sign(x - obj_bunny_player.x);
}
else if(status == 4){   //Y meteoritos si 4
    meteor = instance_create(obj_bunny_player.x, obj_bunny_player.y-1000, obj_meteor);
    meteor_thrown ++;
    if(meteor_thrown == meteor_to_throw){
        status = 1;
        meteor_thrown = 0;
    }
    alarm_set(0, 10);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
switch(status){
    //Esperando al prota
    case 0:
        if(obj_bunny_player.y &lt; 864){
            with(obj_bridge) instance_destroy();
            status = 1;
            alarm_set(0, 30);
        }
    break;
    //Saltando
    case 1:
        //Salto recto, m치s c칩modo
        if(jumping == true){
            if(ascending == true){
                y -= jumpspeed;
                distance_to_floor += jumpspeed;
                if(distance_to_floor &gt;= 1000){
                    ascending = false;
                    x = destination_x;
                    y = destination_y - distance_to_floor;
                }
            }
            else{
                y += jumpspeed;
                distance_to_floor -= jumpspeed;
                if(distance_to_floor &lt;= 0){
                    if(place_meeting(x, y, obj_falling_platform) &amp;&amp; 
                        distance_to_floor &gt; -5){    //Margen de error
                        jumping = false;
                        alarm_set(0, 30);
                        sprite_index = spr_bunny;
                    }
                    //En caso contrario simplemente cae
                    else
                        status = 2;
                }
            }
        }
        else{
            //Que caiga si no tiene plataforma en los pies
            if(!place_meeting(x, y, obj_falling_platform)){
                status = 2;
                alarm_set(0, -1);
            }
        }
    break;
    //Simplement cayendo
    case 2:
        y += jumpspeed;
        distance_to_floor -= jumpspeed;
    break;
    //Volviendo a subir
    case 3:
        if(returning == true){
            if(ascending == true){
                y -= jumpspeed;
                distance_to_floor += jumpspeed;
                if(distance_to_floor &gt;= 1000){
                    ascending = false;
                }  
            }   
            else{
                y += jumpspeed;
                distance_to_floor -= jumpspeed;
                if(distance_to_floor &lt;= 0){
                    alarm_set(0, 30);
                    status = 4;
                }
            } 
        }
    break;
    //Caida de meteoritos
    case 4:
        //En principio se apa침a con el alarm
    break;
}

//Controlamos que se escone
if(distance_to_floor &lt;= -1000 &amp;&amp; status == 2){
    if(stage &lt; 600){
        stage ++;
        status = 3;
        obj_falling_platform.again = true;
        obj_falling_platform.broken = false;
        obj_falling_platform.alarm[0] = -1;
        alarm_set(1, 120);
    }
    else{
        obj_fade_white.fadeIn = false;
    }
}
//
depth = room_height - y - distance_to_floor;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_base_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
if(jumping == true &amp;&amp; ascending == false &amp;&amp; 
    abs(distance_to_floor - other.distance_to_floor) &lt; 80){
    other.health -= 100;
}
else{
    //Ya veremos que hacemos aqui
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
//draw_text(10, 10, stage);
//draw_text(10, 30, status);
//draw_text(10, 50, returning);
//draw_text(10, 70, ascending);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
draw_sprite(spr_big_shadow, 0, x, y + distance_to_floor);

//
draw_self();

//Vamos a dibujar a ver que toma como objetivo
//draw_sprite(spr_shadow, 0, destination_x, destination_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
